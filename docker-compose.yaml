version: '3.7'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-02-26T02-54-46Z
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: minio123
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  spark:
    command: ./spark_submit.sh
    depends_on:
      - createbuckets
    build: .
    working_dir: /open-weather-map
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
  createbuckets:
    image: minio/mc
    depends_on:
      - minio1
      - minio2
      - nginx
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio1 http://minio1:9000 minio minio123;
      /usr/bin/mc mb myminio1/first-step-bucket;
      /usr/bin/mc policy set public myminio1/first-step-bucket;
      /usr/bin/mc mb myminio1/second-step-bucket;
      /usr/bin/mc policy set public myminio1/second-step-bucket;
      exit 0;
      "
## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2: